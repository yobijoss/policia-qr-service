/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.3.4).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.yobijoss.policiaqrservice.api;

import com.yobijoss.policiaqrservice.model.Officer;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2019-05-14T10:16:48.734-05:00[America/Mexico_City]")

@Validated
@Api(value = "officer", description = "the officer API")
public interface OfficerApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "Find an officer by itÂ´s ID", nickname = "getOfficerById", notes = "Returns an officer", response = Officer.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful search", response = Officer.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Officer not found") })
    @RequestMapping(value = "/officer/{officerId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Officer> getOfficerById(@ApiParam(value = "ID of officer to return",required=true) @PathVariable("officerId") Integer officerId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"mothers_last_name\" : \"mothers_last_name\",  \"name\" : \"name\",  \"id\" : \"id\",  \"fathers_last_name\" : \"fathers_last_name\",  \"age\" : 0,  \"height\" : 6.02745618307040320615897144307382404804229736328125}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "Post a new officer", nickname = "postOfficer", notes = "Post a new officer", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK") })
    @RequestMapping(value = "/officer",
        method = RequestMethod.POST)
    default ResponseEntity<Void> postOfficer(@ApiParam(value = "Officer to add to the system" ,required=true )  @Valid @RequestBody Officer officer) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
